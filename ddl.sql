create extension "uuid-ossp";

create table users
(
    id                 uuid        default uuid_generate_v4() not null
        constraint users_pk
            primary key,
    username           varchar
        constraint users_username_uk
            unique,
    following_count    bigint      default 0,
    followers_count    bigint      default 0,
    bio                text,
    posts_count        bigint      default 0,
    highlights_count   bigint      default 0,
    name               varchar,
    profile_image_link text,
    is_business        bool,
    is_verified        bool,
    country            varchar,
    region             varchar,
    created_at         timestamptz default current_timestamp  not null,
    updated_at         timestamptz,
    deleted_at         timestamptz
);

create table businesses
(
    id             uuid        default uuid_generate_v4() not null
        constraint businesses_pk
            primary key,
    user_id        uuid                                   not null
        constraint businesses_users_id_fk
            references users,
    city_name      varchar,
    latitude       float8,
    longitude      float8,
    street_address text,
    zip_code       integer,
    created_at     timestamptz default current_timestamp  not null,
    updated_at     timestamptz,
    deleted_at     timestamptz
);

create table followers
(
    follower_id  uuid                                  not null
        constraint followers_users_id_fk
            references users,
    following_id uuid                                  not null
        constraint followers_users_id_fk2
            references users,
    followed_at  timestamptz default current_timestamp not null,
    constraint followers_pk
        primary key (following_id, follower_id)
);

create table followers_activity
(
    id           uuid        default uuid_generate_v4() not null
        constraint followers_activity_pk
            primary key,
    follower_id  uuid                                   not null
        constraint followers_activity_users_id_fk
            references users,
    following_id uuid                                   not null
        constraint followers_activity_users_id_fk2
            references users,
    is_unfollow  bool        default false              not null,
    created_at   timestamptz default current_timestamp  not null
);

create table locations
(
    id              bigint generated by default as identity
        constraint locations_pk
            primary key,
    has_public_page bool default false not null,
    name            varchar            not null
        constraint locations_name_uk
            unique,
    slug            varchar            not null,
    constraint locations_name_slug_uk
        unique (name, slug)
);

create table posts
(
    id                bigint generated by default as identity
        constraint posts_pk
            primary key,
    user_id           uuid                                  not null
        constraint posts_users_id_fk
            references users,
    caption           text,
    likes_count       bigint      default 0                 not null,
    comments_count    bigint      default 0                 not null,
    video_view_count  bigint      default 0                 not null,
    primary_image_url text,
    primary_video_url text,
    location_id       bigint
        constraint posts_locations_id_fk
            references locations,
    is_sponsored      bool        default false             not null,
    sponsor_id        uuid
        constraint posts_sponsor_id_fk
            references users,
    url               text                                  not null,
    created_at        timestamptz default current_timestamp not null,
    updated_at        timestamptz,
    deleted_at        timestamptz
);

create table post_images
(
    id         bigint generated by default as identity
        constraint post_images_pk
            primary key,
    post_id    bigint                                not null
        constraint post_images_posts_id_fk
            references posts,
    image_url  text                                  not null,
    post_order integer     default 1                 not null,
    created_at timestamptz default current_timestamp not null,
    updated_at timestamptz,
    deleted_at timestamptz
);

create table highlights
(
    id         bigint generated by default as identity
        constraint highlights_pk
            primary key,
    user_id    uuid                                               not null
        constraint highlights_users_id_fk
            references users,
    title      varchar,
    image      text                                               not null,
    created_at timestamp with time zone default CURRENT_TIMESTAMP not null,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    constraint highlights_userid_title
        unique (title, user_id)
);

create table stories
(
    id         uuid        default uuid_generate_v4() not null
        constraint stories_pk
            primary key,
    user_id    uuid                                   not null
        constraint stories_fk
            references users,
    media_url  text                                   not null,
    created_at timestamptz default current_timestamp  not null,
    updated_at timestamptz,
    deleted_at timestamptz
);

create table story_views
(
    story_id  uuid                                  not null
        constraint story_views_stories_id_fk
            references stories,
    viewer_id uuid                                  not null
        constraint story_views_users_id_fk
            references users,
    is_liked  bool        default false             not null,
    viewed_at timestamptz default current_timestamp not null,
    constraint story_views_pk
        primary key (story_id, viewer_id)
);

create table highlights_stories
(
    highlight_id bigint
        constraint highlights_stories_highlights_id_fk
            references highlights,
    story_id     uuid
        constraint highlights_stories_stories_id_fk
            references stories,
    created_at   timestamptz default current_timestamp not null,
    updated_at   timestamptz,
    deleted_at   timestamptz,
    constraint highlights_stories_pk
        primary key (highlight_id, story_id)
);

create table highlights_story_activity
(
    highlight_id bigint
        constraint highlights_story_activity_highlights_id_fk
            references highlights,
    story_id     uuid
        constraint highlights_story_activity_stories_id_fk
            references stories,
    is_removed   bool        default false             not null,
    created_at   timestamptz default current_timestamp not null,
    constraint highlights_story_activity_pk
        primary key (story_id, highlight_id)
);

create table hash_tags
(
    id         bigint generated by default as identity
        constraint hash_tags_pk
            primary key,
    name       text                                               not null
        constraint hash_tags_name_uk
            unique,
    created_by uuid
        constraint hash_tags_users_id_fk
            references users,
    is_blocked boolean                  default false             not null,
    created_at timestamp with time zone default CURRENT_TIMESTAMP not null,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

create table post_tags
(
    post_id    bigint
        constraint post_tags_posts_id_fk
            references posts,
    tag_id     bigint
        constraint post_tags_hash_tags_id_fk
            references hash_tags,
    created_at timestamptz default current_timestamp not null,
    updated_at timestamptz,
    deleted_at timestamptz,
    constraint post_tags_pk
        primary key (post_id, tag_id)
);

create table story_tags
(
    story_id   uuid
        constraint story_tags_stories_id_fk
            references stories,
    tag_id     bigint
        constraint story_tags_hash_tags_id_fk
            references hash_tags,
    created_at timestamptz default current_timestamp not null,
    updated_at timestamptz,
    deleted_at timestamptz,
    constraint story_tags_pk
        primary key (story_id, tag_id)
);

create table block
(
    user_id    uuid
        constraint block_users_id_fk
            references users,
    blocked_id uuid
        constraint block_users_id_fk2
            references users,
    blocked_at timestamptz,
    constraint block_pk
        primary key (user_id, blocked_id)
);

create table block_activity
(
    user_id    uuid
        constraint block_activity_users_id_fk
            references users,
    blocked_id uuid
        constraint block_activity_users_id_fk2
            references users,
    created_at timestamptz default current_timestamp not null,
    updated_at timestamptz,
    deleted_at timestamptz,
    is_block   bool        default true              not null
);

create table restrict
(
    user_id          uuid                                  not null
        constraint restrict_users_id_fk
            references users,
    restrict_user_id uuid                                  not null
        constraint restrict_user_id_user_id_fk
            references users,
    created_at       timestamptz default current_timestamp not null,
    updated_at       timestamptz,
    deleted_at       timestamptz,
    constraint restrict_pk
        primary key (user_id, restrict_user_id)
);

create table restrict_activity
(
    user_id          uuid                                  not null
        constraint restrict_activity_users_id_fk
            references users,
    restrict_user_id uuid                                  not null
        constraint restrict_activity_users_id_fk2
            references users,
    is_restrict      bool        default true              not null,
    created_at       timestamptz default current_timestamp not null
);

create table comments
(
    id                bigint
        constraint comments_pk
            primary key,
    post_id           bigint
        constraint comments_posts_id_fk
            references posts,
    user_id           uuid
        constraint comments_users_id_fk
            references users,
    parent_comment_id bigint,
    comment_text      text                                  not null,
    created_at        timestamptz default current_timestamp not null,
    updated_at        timestamptz,
    deleted_at        timestamptz
);

create table comment_likes
(
    comment_id bigint                                not null
        constraint comment_likes_comments_id_fk
            references comments,
    liked_by   uuid                                  not null
        constraint comment_likes_users_id_fk
            references users,
    liked_at   timestamptz default current_timestamp not null,
    constraint comment_likes_pk
        primary key (comment_id, liked_by)
);

create table comment_activity
(
    comment_id bigint                                not null
        constraint comment_activity_comments_id_fk
            references comments,
    action_by  uuid                                  not null
        constraint comment_activity_users_id_fk
            references users,
    is_like    bool        default true              not null,
    created_at timestamptz default current_timestamp not null
);

create table post_likes
(
    post_id  bigint                                not null
        constraint post_likes_posts_id_fk
            references public.posts,
    user_id  uuid                                  not null
        constraint post_likes_users_id_fk
            references public.users,
    liked_at timestamptz default current_timestamp not null,
    constraint post_likes_pk
        primary key (post_id, user_id)
);

-- users
CREATE INDEX idx_followers_count ON users (followers_count);
CREATE INDEX idx_username ON users (username);

-- businesses
CREATE INDEX idx_businesses_user_id ON businesses (user_id);

-- followers
CREATE INDEX idx_followers_follower_id ON followers (follower_id);
CREATE INDEX idx_followers_following_id ON followers (following_id);

-- followers_activity
CREATE INDEX idx_followers_activity_follower_id ON followers_activity (follower_id);
CREATE INDEX idx_followers_activity_following_id ON followers_activity (following_id);

-- locations
CREATE INDEX idx_locations_name_slug ON locations (name, slug);

-- posts
CREATE INDEX idx_posts_user_id ON posts (user_id);
CREATE INDEX idx_posts_location_id ON posts (location_id);
CREATE INDEX idx_posts_is_sponsored ON posts (is_sponsored);

-- post_images
CREATE INDEX idx_post_images_post_id ON post_images (post_id);

-- highlights
CREATE INDEX idx_highlights_user_id ON highlights (user_id);

-- stories
CREATE INDEX idx_stories_user_id ON stories (user_id);

-- story_views
CREATE INDEX idx_story_views_story_id ON story_views (story_id);
CREATE INDEX idx_story_views_viewer_id ON story_views (viewer_id);

-- highlights_stories
CREATE INDEX idx_highlights_stories_highlight_id ON highlights_stories (highlight_id);
CREATE INDEX idx_highlights_stories_story_id ON highlights_stories (story_id);

-- highlights_story_activity
CREATE INDEX idx_highlights_story_activity_highlight_id ON highlights_story_activity (highlight_id);
CREATE INDEX idx_highlights_story_activity_story_id ON highlights_story_activity (story_id);

-- hash_tags
CREATE INDEX idx_hash_tags_name ON hash_tags (name);

-- post_tags
CREATE INDEX idx_post_tags_post_id ON post_tags (post_id);
CREATE INDEX idx_post_tags_tag_id ON post_tags (tag_id);

-- story_tags
CREATE INDEX idx_story_tags_story_id ON story_tags (story_id);
CREATE INDEX idx_story_tags_tag_id ON story_tags (tag_id);

-- block
CREATE INDEX idx_block_user_id ON block (user_id);
CREATE INDEX idx_block_blocked_id ON block (blocked_id);

-- block_activity
CREATE INDEX idx_block_activity_user_id ON block_activity (user_id);
CREATE INDEX idx_block_activity_blocked_id ON block_activity (blocked_id);

-- restrict
CREATE INDEX idx_restrict_user_id ON restrict (user_id);
CREATE INDEX idx_restrict_restrict_user_id ON restrict (restrict_user_id);

-- restrict_activity
CREATE INDEX idx_restrict_activity_user_id ON restrict_activity (user_id);
CREATE INDEX idx_restrict_activity_restrict_user_id ON restrict_activity (restrict_user_id);

-- comments
CREATE INDEX idx_comments_post_id ON comments (post_id);
CREATE INDEX idx_comments_user_id ON comments (user_id);
CREATE INDEX idx_comments_parent_comment_id ON comments (parent_comment_id);

-- comment_likes
CREATE INDEX idx_comment_likes_comment_id ON comment_likes (comment_id);
CREATE INDEX idx_comment_likes_liked_by ON comment_likes (liked_by);

-- comment_activity
CREATE INDEX idx_comment_activity_comment_id ON comment_activity (comment_id);
CREATE INDEX idx_comment_activity_action_by ON comment_activity (action_by);

-- post_likes
CREATE INDEX idx_post_likes_post_id ON post_likes (post_id);
CREATE INDEX idx_post_likes_user_id ON post_likes (user_id);
